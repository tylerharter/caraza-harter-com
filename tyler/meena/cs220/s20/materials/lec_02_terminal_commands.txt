#######################
# getting help
#######################

# where are we?
get-location # windows style
pwd          # Powershell being somewhat compatible with UNIX

# getting help for a command
get-help pwd
man pwd # manual pages

#######################
# keyboard shortcuts
#######################

# autocomplete, cancel, history
get- <tab> <tab> <tab>
control-C: kill
up arrow key: history
control-R:    history


#######################
# home directory and desktop
#######################

cd ~
pwd
cd Desktop
ls

#######################
# new directory
#######################

cd examples # doesn't exist

# does not exist, so create it
mkdir examples

cd examples # we can get back to this by hitting the up arrow
pwd

#######################
# different paths for the same file
#######################

cd ~\Desktop\examples  # powershell accepts slashes in either direction
pwd
cd c:\Users\test3\Desktop\examples # absolute path
pwd
cd ..\examples # relative path
pwd

#######################
# reading and writing files
#######################

echo howdy

echo howdy > file.txt
ls
cat file.txt
notepad file.txt # and edit something
cat file.txt

echo line2 > file.txt
cat file.txt

echo line3 >> file.txt
cat file.txt

#######################
# moving+copying
#######################

pushd . #pushes the current directory into stack
popd #removes the topmost directory from the stack
cp file.txt file-copy.txt
ls
cat file-copy.txt
mv file-copy file-v2.txt
ls

#######################
# challenge 1
#######################

echo A > a.txt
echo B > b.txt
cat b.txt > a.txt
cat a.txt > b.txt
cat a.txt # what does it print?

#######################
# challenge 2
#######################

echo win > x.txt
echo lose > y.txt
mv y.txt z.txt
mv x.txt y.txt
mv z.txt x.txt
cat x.txt # what does it print?

#######################
# challenge 3
#######################

echo parent > person.txt
mkdir mydir
cd mydir
echo child > person.txt
cat ../person.txt # what does it print?

#######################
# challenge 4
#######################

echo data > one.txt
cat one.txt > two.txt
echo science > one.txt
cat two.txt # what does it print?

#######################
# scripts
#######################

echo "ls" > test.ps1
test.ps1
notepad test.ps1
# add something
cat test.ps1
test.ps1

